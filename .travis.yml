env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "fX7x2AA1BEBmT1scgpE7oGZYpUjvwfLsYSSNV22t1OdswUPQPwyRxeVG9Fk0DfpPRR8AotF6yY+kAxzY81BNlqo7gEAf+0keiwe5I9ek3lyAZBh2sWmue6pyAhrBFZI6Z6oDbz0mud/q0IPzh9ILMQIejz2p/C/VIKh6/FhAeII="
  matrix:
   - CARGO_METHOD=memcheck
     CMAKE_ARGS="-DCMAKE_BUILD_TYPE=Debug"
   - CARGO_METHOD=coveralls
     CMAKE_ARGS="-DCARGO_WITH_MEMCHECK=OFF -DCARGO_COVERALLS=ON -DCARGO_TEST=ON -DCMAKE_BUILD_TYPE=Debug"
   - CARGO_METHOD=noexamples
     CMAKE_ARGS="-DCARGO_EXAMPLE=OFF"
   - CARGO_METHOD=nohelper
     CARGO_ARGS="-DCARGO_HELPER=OFF"
   - CARGO_METHOD=noextrasamples
     CARGO_ARGS="-DCARGO_EXTRA_SAMPLES=OFF"
   - CARGO_METHOD=noshared
     CARGO_ARGS="-DCARGO_BUILD_SHARED_LIB=OFF"
   - CARGO_METHOD=nostatic
     CARGO_ARGS="-DCARGO_BUILD_STATIC_LIB=OFF"
   - CARGO_METHOD=onlystatic
     CARGO_ARGS="-DCARGO_BUILD_STATIC_LIB=ON -DCARGO_BUILD_SHARED_LIB=OFF"
   - CARGO_METHOD=onlyshared
     CARGO_ARGS="-DCARGO_BUILD_STATIC_LIB=OFF -DCARGO_BUILD_SHARED_LIB=ON"
language: c
os:
  - linux
  - osx
matrix:
  exclude:
    - os: osx
      env: CARGO_METHOD=coveralls CMAKE_ARGS="-DCARGO_WITH_MEMCHECK=OFF -DCARGO_COVERALLS=ON -DCARGO_TEST=ON -DCMAKE_BUILD_TYPE=Debug"
install:
  - if [ x$TRAVIS_OS_NAME == xlinux ]; then sudo apt-get -qq -y update && sudo apt-get install valgrind; fi
  - if [ x$TRAVIS_OS_NAME == xosx ]; then brew install valgrind; fi
script:
  - if [ "$COVERITY_SCAN_BRANCH" != 1 ]; then mkdir build && cd build && cmake -DCARGO_DEBUG=4 $CMAKE_ARGS .. && make && ctest --output-on-failure; fi
  - if [ "$COVERITY_SCAN_BRANCH" != 1 ] && [ "$CARGO_METHOD" == "coveralls" ]; then cmake -DCARGO_DEBUG=0 .. && make && make coveralls; fi

after_success:
  - if [ x$TRAVIS_OS_NAME == xlinux ]; then bash <(curl -s https://codecov.io/bash); fi

addons:
  coverity_scan:
    project:
      name: "JoakimSoderberg/cargo"
    notification_email: joakim.soderberg@gmail.com
    build_command_prepend: "mkdir build && cd build && cmake .."
    build_command: "make"
    branch_pattern: coverity_scan
